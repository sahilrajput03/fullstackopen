type User {
  username: String!
  favoriteGenre: String
  articles: String
  id: ID!
}

type Token {
  value: String!
}

type Author {
  name: String
  born: Int
}

type Book {
  title: String!
  author: Author
  published: Int!
  genres: [String!]
  id: ID!
}

type allAuth {
  name: String
  bookCount: Int
  born: Int
}

type Query {
  me: User
  bookCount: Int!
  authorCount: Int!
  allBooks(author: String, genre: String): [Book!]!
  allAuthors(bookCount: Int): [allAuth]
}

type Mutation {
  addBook(title: String!, author: String, published: Int, genres: [String]!): Book
  editAuthor(name: String!, setBornTo: Int): Author
  createUser(username: String!): User
  login(username: String!, password: String!): Token
}

type Subscription {
  bookAdded: Book!
}
