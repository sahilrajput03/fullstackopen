{"version":3,"sources":["services/phonuu.js","index.js"],"names":["baseurl","axios","get","then","response","data","newObject","post","id","put","delobject","delete","Notification","messageErr","messageSucc","console","log","className","PersonForm","addName","handleNameChange","handleNumberChange","newName","newNumber","onSubmit","value","onChange","type","Filter","search","handleSearchChange","Persons","persons","setPersons","setErrorMessage","map","p","key","name","number","onClick","toBeDeletedPerson","find","t","window","confirm","filter","pappu","JSON","stringify","phoneService","setTimeout","deleteThing","searchTEXT","searchTEXTlength","i","arr","toUpperCase","length","slice","push","a","App","useState","setNewName","errorMessage","successMessage","setSuccessMessage","useEffect","setNewNumber","setSearch","event","target","preventDefault","undefined","catch","error","personObject","concat","ReactDOM","render","document","getElementById"],"mappings":"mOAGMA,EAAU,eAsBD,EApBA,WACX,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmBzC,EAhBA,SAAAC,GACX,OAAOL,IAAMM,KAAKP,EAASM,GAAWH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAerD,EAZA,SAACG,EAAIF,GAChB,OAAOL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAAWH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAW/D,EARE,SAACG,EAAIE,GAClB,OAAOT,IAAMU,OAAOX,EAAU,IAAMQ,EAAIE,I,oOCZ5C,IAAME,EAAe,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAChC,OAAmB,OAAfD,GAAuC,OAAhBC,EAChB,KACe,OAAfD,GACPE,QAAQC,IAAI,kBAER,yBAAKC,UAAU,gBACVH,KAKTC,QAAQC,IAAI,gBAER,yBAAKC,UAAU,SACVJ,KAQXK,EAAa,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,QAASC,EAA+D,EAA/DA,iBAAkBC,EAA6C,EAA7CA,mBAAoBC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAC1E,OACI,6BACI,0BAAMC,SAAUL,GAAhB,UACW,2BAAOM,MAAOH,EAASI,SAAUN,IAA2B,6BAAS,6BADhF,WAEY,2BAAOK,MAAOF,EAAWG,SAAUL,IAA4B,6BAAS,6BAChF,6BACI,4BAAQM,KAAK,UAAb,uBAOdC,EAAS,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,mBACtB,OACI,2BAAOL,MAAOI,EAAQH,SAAUI,KAKlCC,EAAU,SAAC,GAAsD,IAApDF,EAAmD,EAAnDA,OAAQG,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,gBAE5C,GAAU,KADFL,EACM,CAmBV,OAAOG,EAAQG,KAAI,SAACC,GAAD,OACf,uBAAGC,IAAKD,EAAE5B,IACL4B,EAAEE,KADP,MACgBF,EAAEG,OACd,4BAAQC,QAAS,kBArBL,SAAChC,GACjBO,QAAQC,IAAI,mBAAoBR,EAAI,sCACpC,IAAMiC,EAAoBT,EAAQU,MAAK,SAACC,GAAD,OAAOA,EAAEnC,KAAOA,KACnDoC,OAAOC,QAAP,oCAA4CJ,EAAkBH,SAC9DL,EAAWD,EAAQc,QAAO,SAACC,GAAD,OAAYA,EAAMvC,KAAOA,MACnDO,QAAQC,IAAI,MAAOR,EAAI,gBAAiBwC,KAAKC,UAAUR,IACvDS,EACc1C,EAAIiC,GACbtC,MAAK,SAAAC,GACFW,QAAQC,IAAI,MAAOR,EAAI,gBAAiBwC,KAAKC,UAAUR,IACvDP,EAAgB,GAAD,OAAIO,EAAkBH,KAAtB,oCACfa,YAAW,WAAQjB,EAAgB,QAAS,SAU5BkB,CAAYhB,EAAE5B,MAAtC,cAIR,IAAI6C,EAAYC,EAAkBC,EAC9BC,EAAM,GAGV,IADAF,GADAD,EAAaxB,EAAO4B,eACUC,OACzBH,EAAI,EAAGA,EAAIvB,EAAQ0B,OAAQH,IACtBvB,EAAQuB,GAAGjB,KAAKmB,cAEdE,MAAM,EAAGL,KAAsBD,IACnCtC,QAAQC,IAAI,gBACZwC,EAAII,KAAKL,IAGjB,OAAOC,EAAIrB,KAAI,SAAC0B,GAAD,OAAQ,uBAAGxB,IAAKL,EAAQ6B,GAAGrD,IAAMwB,EAAQ6B,GAAGvB,KAApC,MAA6CN,EAAQ6B,GAAGtB,YAIjFuB,EAAM,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPzC,EADO,KACE0C,EADF,OAEgBD,mBAAS,IAFzB,mBAEP/B,EAFO,KAEEC,EAFF,OAG0B8B,mBAAS,MAHnC,mBAGPE,EAHO,KAGO/B,EAHP,OAI8B6B,mBAAS,MAJvC,mBAIPG,EAJO,KAISC,EAJT,KAwBdC,qBAVa,WAETlB,IAEK/C,MAAK,SAAAC,GAEF6B,EAAW7B,QAIP,IAxBF,MA0BoB2D,mBAAS,IA1B7B,mBA0BPxC,EA1BO,KA0BI8C,EA1BJ,OA2BcN,mBAAS,IA3BvB,mBA2BPlC,EA3BO,KA2BCyC,EA3BD,KA4Hd,OACI,6BACI,yCACA,kBAAC,EAAD,CAAczD,WAAYoD,EAAcnD,YAAaoD,IAErD,kBAAC,EAAD,CAAQrC,OAAQA,EAAQC,mBA5BL,SAACyC,GAAD,OAAWD,EAAUC,EAAMC,OAAO/C,UA+BrD,6BAEA,kDACA,kBAAC,EAAD,CAAYN,QA1GJ,SAACoD,GACbA,EAAME,iBACN,IAAI9B,EAAIX,EAAQU,MAAK,SAACC,GAAD,OAAOA,EAAEL,OAAShB,KACvC,QAAUoD,IAAN/B,EAAiB,CACPC,OAAOC,QAAP,UAAkBF,EAAEL,KAApB,6EAENK,E,yVAAC,IAAQA,EAAR,CAAWJ,OAAQhB,IACpB2B,EACYP,EAAEnC,GAAImC,GACbxC,MAAK,SAACC,GAIHW,QAAQC,IAAIZ,GACZW,QAAQC,IAAI,kBAEZkC,IAEK/C,MAAK,SAAAC,GACF6B,EAAW7B,GACXW,QAAQC,IAAI,kBACZmD,EAAkB,SAAD,OAAUxB,EAAEL,KAAZ,uCACjBa,YAAW,WAAQgB,EAAkB,QAAS,WAGzDQ,OAAM,SAAAC,GAEH7D,QAAQC,IAAI,oBACZkB,EAAgB,aAAD,OAAcS,EAAEL,KAAhB,uCACfa,YAAW,WAAOjB,EAAgB,QAAQ,KAC1CD,EAAWD,EAAQc,QAAO,SAAAV,GAAC,OAAIA,EAAEE,OAASK,EAAEL,aAMxD0B,EAAW,IACXK,EAAa,QACV,CACH,IAAMQ,EAAe,CAAEvC,KAAMhB,EAASiB,OAAQhB,GAC9C2B,EACY2B,GACP1E,MAAK,SAAAC,GACF6B,EAAWD,EAAQ8C,OAAO1E,IAG1B+D,EAAkB,GAAD,OAAIU,EAAavC,KAAjB,gCACjBa,YAAW,WAAQgB,EAAkB,QAAS,QAEjDQ,OAAM,SAAAC,GACH7D,QAAQC,IAAI4D,EAAMxE,SAASC,KAAKuE,OAEhC1C,EAAgB,oDAAD,OAAqD0C,EAAMxE,SAASC,KAAKuE,MAAzE,MACfzB,YAAW,WAAOjB,EAAgB,QAAQ,QAMlDmC,EAAa,IACbL,EAAW,MA8CmB5C,iBA1Cb,SAACmD,GACtBP,EAAWO,EAAMC,OAAO/C,QAyC8CJ,mBAtC/C,SAACkD,GAAD,OACvBF,EAAaE,EAAMC,OAAO/C,QAqCoFH,QAASA,EAASC,UAAWA,IASvI,6BAEA,uCACA,6BACI,kBAAC,EAAD,CAASM,OAAQA,EAAQG,QAASA,EAASC,WAAYA,EAAYC,gBAAiBA,EAAiB+B,aAAcA,KAIvH,+BAUZc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAElCpB,c","file":"static/js/main.e2e559e4.chunk.js","sourcesContent":["import axios from 'axios'\r\n// const baseurl = 'http://192.168.43.29:3001/persons'\r\n// const baseurl = 'http://localhost:3001/persons'\r\nconst baseurl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseurl).then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseurl, newObject).then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseurl}/${id}`, newObject).then(response => response.data)\r\n}\r\n\r\nconst deleteIt = (id, delobject) => {\r\n    return axios.delete(baseurl + \"/\" + id, delobject)\r\n    // return axios.delete(baseurl+\"/\"+id,delobject).then(response => response.data )    \r\n    //  both statements above work\r\n\r\n\r\n}\r\n\r\nexport default { getAll, create, update, deleteIt }","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport phoneService from './services/phonuu'\r\nimport './index.css'\r\n\r\n\r\nconst Notification = ({ messageErr, messageSucc }) => {\r\n    if (messageErr === null && messageSucc === null) {\r\n        return null\r\n    } else if (messageErr === null) {\r\n        console.log(\"Green message.\");\r\n        return (\r\n            <div className=\"successMagic\">\r\n                {messageSucc}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        console.log(\"Red message.\");\r\n        return (\r\n            <div className=\"error\">\r\n                {messageErr}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst PersonForm = ({ addName, handleNameChange, handleNumberChange, newName, newNumber }) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={addName}>\r\n                Name:  <input value={newName} onChange={handleNameChange} ></input><br></br><br></br>\r\n                Number: <input value={newNumber} onChange={handleNumberChange}></input><br></br><br></br>\r\n                <div>\r\n                    <button type=\"submit\" >Add to Contacts</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Filter = ({ search, handleSearchChange }) => {\r\n    return (\r\n        <input value={search} onChange={handleSearchChange}></input>\r\n    )\r\n}\r\n\r\n\r\nconst Persons = ({ search, persons, setPersons, setErrorMessage }) => {\r\n    let s = search\r\n    if (s === \"\") {\r\n        const deleteThing = (id) => {\r\n            console.log(\"Person with id: \", id, \" will be be deleted if pressed OK.\");\r\n            const toBeDeletedPerson = persons.find((t) => t.id === id)\r\n            if (window.confirm(`You really want to delete ${toBeDeletedPerson.name}`)) {\r\n                setPersons(persons.filter((pappu) => (pappu.id !== id)))\r\n                console.log(\"id:\", id, \" deletednote:\", JSON.stringify(toBeDeletedPerson));\r\n                phoneService\r\n                    .deleteIt(id, toBeDeletedPerson)\r\n                    .then(response => {\r\n                        console.log(\"id:\", id, \" deletednote:\", JSON.stringify(toBeDeletedPerson));\r\n                        setErrorMessage(`${toBeDeletedPerson.name} is deleted from the phonebook.`)\r\n                        setTimeout(() => { setErrorMessage(null) }, 5000)\r\n                    })\r\n                // even passing the then(like above) method won't break the program.\r\n            } else {\r\n                // console.log(\"okay, its preserved here.\");\r\n            }\r\n        }\r\n        return persons.map((p) => (\r\n            <p key={p.id}>\r\n                {p.name} : {p.number}\r\n                <button onClick={() => (deleteThing(p.id))}>Delete</button>\r\n            </p>\r\n        )); //for all shown \r\n    } else {\r\n        let searchTEXT, searchTEXTlength, i, tmp\r\n        let arr = []\r\n        searchTEXT = search.toUpperCase()\r\n        searchTEXTlength = searchTEXT.length\r\n        for (i = 0; i < persons.length; i++) {\r\n            tmp = persons[i].name.toUpperCase()\r\n\r\n            if (tmp.slice(0, searchTEXTlength) === searchTEXT) {\r\n                console.log(\"yes, go on..\");\r\n                arr.push(i)\r\n            }\r\n        }\r\n        return arr.map((a) => (<p key={persons[a].id} >{persons[a].name} : {persons[a].number}</p>))    //for searched selected shown \r\n    }\r\n}\r\n\r\nconst App = () => {\r\n    const [newName, setNewName] = useState('')\r\n    const [persons, setPersons] = useState([])\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n\r\n    //OLDER HARD CODED PERSON OBJECTS BELOW\r\n    // const [persons, setPersons] = useState([\r\n    //     { name: 'Arto Hellas', number: '040-123456' },\r\n    //     { name: 'Ada Lovelace', number: '39-44-5323523' },\r\n    //     { name: 'Dan Abramov', number: '12-43-234345' },\r\n    //     { name: 'Mary Poppendieck', number: '39-23-6423122' }\r\n    // ])\r\n\r\n    const hook = () => {\r\n        // console.log('effect is asynchronous, I got late fetching notes from the server')\r\n        phoneService\r\n            .getAll()\r\n            .then(response => {\r\n                // console.log('promimse fulfilled')\r\n                setPersons(response)\r\n            })\r\n    }\r\n\r\n    useEffect(hook, [])\r\n\r\n    const [newNumber, setNewNumber] = useState(\"\")\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    const addName = (event) => {\r\n        event.preventDefault()\r\n        let t = persons.find((t) => t.name === newName)\r\n        if (t !== undefined) {\r\n            const m = window.confirm(`${t.name} is already added to phonebook, replace the old number with a new one?`)// use of template string.\r\n            if (m) {\r\n                t = { ...t, number: newNumber }\r\n                phoneService\r\n                    .update(t.id, t)\r\n                    .then((response) => {\r\n\r\n                        \r\n\r\n                        console.log(response);\r\n                        console.log(\"updateexecuted\");\r\n                        //getting all with updated one\r\n                        phoneService\r\n                            .getAll()\r\n                            .then(response => {\r\n                                setPersons(response)\r\n                                console.log(\"getallexecuted\");\r\n                                setSuccessMessage(`Note: ${t.name}'s number is updated successfully.`)\r\n                                setTimeout(() => { setSuccessMessage(null) }, 5000)\r\n                            })\r\n                    })\r\n                    .catch(error => {\r\n                        // alert(`\"${t.name}\" was already deleted from server`)\r\n                        console.log(\"catch-error-body\");\r\n                        setErrorMessage(`Failure: \"${t.name}\" was already deleted from server.`)\r\n                        setTimeout(() => {setErrorMessage(null)}, 5000)\r\n                        setPersons(persons.filter(p => p.name !== t.name))\r\n                        // setNotes(notes.filter(n => n.id !== id))\r\n                    })\r\n\r\n            }\r\n\r\n            setNewName(\"\")\r\n            setNewNumber(\"\")\r\n        } else {\r\n            const personObject = { name: newName, number: newNumber }\r\n            phoneService\r\n                .create(personObject)\r\n                .then(response => {\r\n                    setPersons(persons.concat(response));\r\n\r\n                    // console.log(\"new contact created , and catch area started\");\r\n                    setSuccessMessage(`${personObject.name} is added to the phonebook.`)\r\n                    setTimeout(() => { setSuccessMessage(null) }, 5000)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error.response.data.error)\r\n                    //#################\r\n                    setErrorMessage(`Huh.. the server is returning error with message ${error.response.data.error}.`)\r\n                    setTimeout(() => {setErrorMessage(null)}, 5000)\r\n                    //way to access the error message..\r\n                    // console.log('BOOM TAM - BOOM ANAND',error);\r\n                })\r\n\r\n            // setPersons(persons.concat(personObject))\r\n            setNewNumber('')\r\n            setNewName('')\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => (\r\n        setNewNumber(event.target.value)\r\n    )\r\n\r\n    const handleSearchChange = (event) => setSearch(event.target.value)\r\n\r\n    /* const all = (s) => {\r\n        if (s === \"\") {\r\n            return persons.map((p) => (<p key={p.name}>{p.name} : {p.number}</p>));\r\n        } else {\r\n            let filter, filterLength, i, j, tmp\r\n            let arr = []\r\n            j = 0\r\n            filter = search.toUpperCase()\r\n            filterLength = filter.length\r\n            for (i = 0; i < persons.length; i++) {\r\n                tmp = persons[i].name.toUpperCase()\r\n\r\n                if (tmp.slice(0, filterLength) === filter) {\r\n                    console.log(\"yes, go on..\");\r\n                    arr.push(i)\r\n                }\r\n            }\r\n            return arr.map((a) => (    <p >{persons[a].name} : {persons[a].number}</p>     ))\r\n        }\r\n    } */\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification messageErr={errorMessage} messageSucc={successMessage} />\r\n\r\n            <Filter search={search} handleSearchChange={handleSearchChange} ></Filter>\r\n            {/* <input value={search} onChange={handleSearchChange}></input> */}\r\n\r\n            <hr></hr>\r\n\r\n            <h3>Add a New Contact:</h3>\r\n            <PersonForm addName={addName} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} newName={newName} newNumber={newNumber}></PersonForm>\r\n            {/* <form onSubmit={addName}>\r\n                        Name:  <input value={newName} onChange={handleNameChange} ></input><br></br><br></br>\r\n                        Number: <input value={newNumber} onChange={handleNumberChange}></input><br></br><br></br>\r\n                        <div>\r\n                            <button type=\"submit\" >Add to Contacts</button>\r\n                        </div>\r\n                    </form> */}\r\n\r\n            <hr></hr>\r\n\r\n            <h3>Numbers</h3>\r\n            <div>\r\n                <Persons search={search} persons={persons} setPersons={setPersons} setErrorMessage={setErrorMessage} errorMessage={errorMessage} />\r\n                {/* {all(search)} */}\r\n            </div>\r\n\r\n            <hr></hr>\r\n\r\n\r\n            {/* ...debugging area...\r\n            <div>Search(input): {search}</div>\r\n            <div>debug: {JSON.stringify(persons)}</div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n\r\nexport default App"],"sourceRoot":""}